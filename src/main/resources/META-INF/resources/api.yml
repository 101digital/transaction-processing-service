openapi: 3.0.1
info:
  title: Transaction Processing Service
  version: 1.0.0
  description: The Transaction Processing Service is responsible for the post-processing of Transactions. One   example of such post processing is where an additional Round Up Transaction is generated. 

     Users can define configurations on their wallets to execute processes after a transaction is completed. 
  x-custom-info:
    authors:
      name: Dasun Anushka
      email: lakmal.thanthrige@101digital.io
tags: 
  - name: Configurations
    description: Manage Configuraitons
servers:
  - url: 'http://localhost:8090'
paths:
  /configurations:
    post:
      operationId: addConfigurations
      summary: Create Round Up Contribution
      description: Configure Round Up settings for the wallet targeting to a specific savings pot
      tags:
        - Configurations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configurations'
      responses:
        '200':
          description: Confirm success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error while performing file operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getConfigurations
      summary: Get Round Up Contribution
      description: Get Round up settings of the wallet
      tags:
        - Configurations
      parameters:
        - name: type
          required: false
          in: query
          schema:
            type: string
          example: ROUNDUP_CONTRIBUTION
        - name: walletId
          required: true
          in: query
          schema:
            type: string
          example: 18957-94517-15684-46645
        - name: pageNumber
          required: false
          in: query
          schema:
            type: int
          example: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: int
          example: 10
        - name: listOrders
          in: query
          description: Results will be sorted and ordered based on the given criteria
          required: false
          schema:
            type: string
          example: createdAt-DESC,updatedAt-ASC
      responses:
        '200':
          description: Confirm success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationsListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error while performing file operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearer: [ ]
  /configurations/{configurationId}:
    delete:
      tags:
        - Configurations
      summary: Delete Round Up Contribution
      description: Delete Round Up settings configured
      operationId: deleteConfigurationById
      parameters:
        - name: configurationId
          in: path
          description: Configuration Id
          required: true
          schema:
            type: string
            format: UUID
          example: 8837e900-d8a3-487f-9092-46c0924af7db
      responses:
        503:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        204:
          description: Contact deleted successfully
          content:
            application/json:
              schema:
                $ref: string
        404:
          description: Data Not Found
          content:
            application/json:
              schema:
                type: string
        400:
          description: Input data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Bearer: [ ]
    put:
      tags:
        - Configurations
      summary: Update Round Up Contribution
      description: Change Round Up settings of the wallet targeting different saving pot
      operationId: updateConfigurationById
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configurations'
      parameters:
        - name: configurationId
          in: path
          description: Configuration Id
          required: true
          schema:
            type: string
            format: UUID
          example: 8837e900-d8a3-487f-9092-46c0924af7db
      responses:
        503:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        200:
          description: Confirm success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationsResponse'
        404:
          description: Data Not Found
          content:
            application/json:
              schema:
                type: string
        400:
          description: Input data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Bearer: [ ]

#-----
components:
  schemas:
    TestResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Test'
        paging:
          $ref: '#/components/schemas/PagingInformation'
    Test:
      type: object
      properties:
        name:
          type: string
    PagingInformation:
      type: object
      properties:
        totalRecords:
          type: integer
          description: Number of total records in the response.
          format: int64
          example: 100
        pageNumber:
          type: integer
          description: The page number to return (starting at page 1).
          format: int32
          example: 1
        pageSize:
          type: integer
          description: The number of records to return in a single request
          format: int32
          example: 10
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResponseStatus'
    ResponseStatus:
      type: object
      properties:
        code:
          type: string
          example: 161.01.500.01
          description: Code of Response Status
        message:
          type: string
          example: Error While Adding Configuration.
          description: Explanational message of Response Status and Code
    Configurations:
      type: object
      properties:
        id:
          type: UUID
          example: 8837e900-d8a3-487f-9092-46c0924af7db
          description: The unique ID (primary key) for the record
          required: true
        type:
          type: string
          example: ROUNDUP_CONTRIBUTION
          description: Type of the configuration
          required: true
        walletId:
          type: string
          example: 18763-97894-12462-76013
          description: Source Wallet id of the transaction considered to be processed
          required: true
        logicCode:
          type: string
          example: DEFAULT
          description: The Identifier which logic to use for the round up
          required: true
        createdBy:
          type: UUID
          example: d43aa779-d77b-4265-960e-7b1b5fecb6ae
          description: The user (user id) who created the record
          required: false
        updatedby:
          type: UUID
          example: d43aa779-d77b-4265-960e-7b1b5fecb6ae
          description: The user (user id) who last updated the record
          required: false
        createdAt:
          type: string
          format: date-time
          example: 2023-09-20 13:17:15.790217+00
          description: The date & time when the record was created
          required: true
        updatedAt:
          type: string
          format: date-time
          example: 2023-09-20 13:17:15.790217+00
          description: The date & time when the record was last updated
          required: false
        supplementaryData:
          $ref: '#/components/schemas/OBSupplementaryData1'
    OBSupplementaryData1:
      type: object
      description: Additional information that can not be captured in the structured fields and/or any other specific block.
      example: '"contributionWalletId": "18763-97894-12462-76013"'
    ConfigurationsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Configurations'
    ConfigurationsListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Configurations'
        paging:
          $ref: '#/components/schemas/PagingInformation'
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
