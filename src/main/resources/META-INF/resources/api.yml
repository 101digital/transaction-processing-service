openapi: 3.0.1
info:
  title: Schedule Payment Service
  version: 1.0.0
  description: When making Payments, Users are typically presented with options to make those payments at a future date and / or make those payments at regular intervals. The role of the Scheduled Payment Service is to support these capabilities - Future Dated Payments and Recurring Payments. In addition, the Scheduled Payment Service also supports Bulk Payments (or Batch Payments). A typical use case is monthly Payroll Payments that are processed on behalf of Business / Corporate banking Customers.
  x-custom-info:
    authors:
      name: Dasun Anushka
      email: lakmal.thanthrige@101digital.io
servers:
  - url: 'http://localhost:8090'
paths:
  /test:
    get:
      tags:
        - test endpoint
      summary: test
      description: test
      operationId: testEndpoint
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResponse'
        503:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Data Not Found
          content:
            application/json:
              schema:
                type: string
        400:
          description: Input data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string

  /configurations/{configurationId}:
    delete:
      tags:
        - RC Configurations
      summary: Delete the configuration using configuration id
      operationId: deleteConfigurationById
      parameters:
        - name: configurationId
          in: path
          description: configuration id
          required: true
          schema:
            type: string
          example: 123
      responses:
        503:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        204:
          description: Contact deleted successfully
          content:
            application/json:
              schema:
                $ref: string
        404:
          description: Data Not Found
          content:
            application/json:
              schema:
                type: string
        400:
          description: Input data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Bearer: [ ]

#-----
components:
  schemas:
    TestResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Test'
        paging:
          $ref: '#/components/schemas/PagingInformation'
    Test:
      type: object
      properties:
        name:
          type: string
    PagingInformation:
      type: object
      properties:
        totalRecords:
          type: integer
          description: Number of total records in the response.
          format: int64
          example: 100
        pageNumber:
          type: integer
          description: The page number to return (starting at page 1).
          format: int32
          example: 1
        pageSize:
          type: integer
          description: The number of records to return in a single request
          format: int32
          example: 10
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResponseStatus'
    ResponseStatus:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer