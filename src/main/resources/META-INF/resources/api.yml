openapi: 3.0.1
info:
  title: Transaction Processing Service
  version: 1.0.0
  description: The Transaction Processing Service is responsible for the post-processing of Transactions. One example of such post processing is where an additional Round Up Transaction is generated. Users can define configurations on their wallets to execute processes after a transaction is completed.

tags:
  - name: Configurations
    description: Manage Configuraitons
servers:
  - url: 'http://localhost:8090'
paths:
  /configurations:
    post:
      operationId: addConfigurations
      summary: Create Round Up Contribution
      description: Configure Round Up settings for the wallet targeting to a specific savings pot
      tags:
        - Configurations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configurations'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getConfigurations
      summary: Get Round Up Contribution
      description: Get Round up settings of the wallet
      tags:
        - Configurations
      parameters:
        - name: type
          required: false
          in: query
          description: The type of round up rule configuration.
          schema:
            type: string
          example: ROUNDUP_CONTRIBUTION
        - name: walletId
          required: true
          in: query
          description: A unique identifier of the wallet.
          schema:
            type: string
          example: 18957-94517-15684-46645
        - name: pageNumber
          required: false
          in: query
          description: The current page number within the paginated results.
          schema:
            type: integer
          example: 1
        - name: pageSize
          required: false
          in: query
          description: The maximum number of records on a single page.
          schema:
            type: integer
          example: 10
        - name: listOrders
          in: query
          description: The criteria to sort the response data, in the format property name-sorting order.
          required: false
          schema:
            type: string
          example: createdAt-DESC,updatedAt-ASC
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationsListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Bearer: [ ]
  /configurations/{configurationId}:
    delete:
      tags:
        - Configurations
      summary: Delete Round Up Contribution
      description: Delete Round Up settings configured
      operationId: deleteConfigurationById
      parameters:
        - name: configurationId
          in: path
          description: A unique identifier of round up configuration rule in the context of extras parameter of the configuration rule.
          required: true
          schema:
            type: string
            format: UUID
          example: 8837e900-d8a3-487f-9092-46c0924af7db
      responses:
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Bearer: [ ]
    put:
      tags:
        - Configurations
      summary: Update Round Up Contribution
      description: Change Round Up settings of the wallet targeting different saving pot
      operationId: updateConfigurationById
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configurations'
      parameters:
        - name: configurationId
          in: path
          description: A unique identifier of round up configuration rule in the context of extras parameter of the configuration rule.
          required: true
          schema:
            type: string
            format: UUID
          example: 8837e900-d8a3-487f-9092-46c0924af7db
      responses:
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        200:
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationsResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Bearer: [ ]

#-----
components:
  schemas:
    TestResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Test'
        paging:
          $ref: '#/components/schemas/PagingInformation'
    Test:
      type: object
      properties:
        name:
          type: string
    PagingInformation:
      type: object
      properties:
        totalRecords:
          type: integer
          description: The total number of records.
          format: int64
          example: 100
        pageNumber:
          type: integer
          description: The current page number within the paginated results.
          format: int32
          example: 1
        pageSize:
          type: integer
          description: The maximum number of records on a single page.
          format: int32
          example: 10
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResponseStatus'
    ResponseStatus:
      type: object
      properties:
        code:
          type: string
          description: Error code of response
          example: 161.01.500.01
        message:
          type: string
          description: Explanational error message of Response Status and Code
          example: Error While Adding Configuration.
    Configurations:
      type: object
      properties:
        id:
          type: string
          format: UUID
          example: 8837e900-d8a3-487f-9092-46c0924af7db
          description: A unique identifier of the roud up rule configuration.
        type:
          type: string
          example: ROUNDUP_CONTRIBUTION
          description: The type of round up rule configuration.
        walletId:
          type: string
          example: 18763-97894-12462-76013
          description: A unique identifier of the wallet.
        logicCode:
          type: string
          example: DEFAULT
          description: The unique code indicating the logic of round up, For example, DEFAULT - round up to next decimal.
        createdBy:
          type: string
          format: UUID
          example: d43aa779-d77b-4265-960e-7b1b5fecb6ae
          description: The user who create the round up configuration rule.
        updatedby:
          type: string
          format: UUID
          example: d43aa779-d77b-4265-960e-7b1b5fecb6ae
          description: The user who latest updated to the round up configuration rule.
        createdAt:
          type: string
          format: date-time
          example: 2023-09-20 13:17:15.790217+00
          description: The time of the round up configuration rule creation, in ISO date-time format in UTC timezone.
        updatedAt:
          type: string
          format: date-time
          example: 2023-09-20 13:17:15.790217+00
          description: The user who latest updated to the round up configuration rule.
        supplementaryData:
          $ref: '#/components/schemas/OBSupplementaryData1'
    OBSupplementaryData1:
      type: object
      description: Additional information that can not be captured in the structured fields and/or any other specific block.
      example:
        - key: contributionWalletId
          value: 18763-97894-12462-76013
    ConfigurationsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Configurations'
    ConfigurationsListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Configurations'
        paging:
          $ref: '#/components/schemas/PagingInformation'
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
