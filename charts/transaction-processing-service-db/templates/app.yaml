apiVersion: batch/v1
kind: Job
metadata:
  name: transaction-processing-service-db
spec:
  template:
    metadata:
      labels:
        app: transaction-processing-service-db
    spec:
      containers:
        - image: containers.github.acsdigital.dev/adb/transaction-processing-service:{{ .Values.image.tag }}
          name: transaction-processing-service
          imagePullPolicy: {{ .Values.kubernetes.imagePullPolicy }}
          env:
            - name: SPRING_APPLICATION_JSON
              valueFrom:
                configMapKeyRef:
                  name: transaction-processing-service-db-config
                  key: config.json
          {{ if .Values.server.ssl.enabled }}
          volumeMounts:
            - mountPath: /apps/conf/keystore.jks
              name: tomcat-ssl
              subPath: keystore.jks
            - mountPath: /opt/java/openjdk/lib/security/cacerts
              name: java17-certs
              subPath: cacerts
              readOnly: false
          {{ end }}
      restartPolicy: Never
      {{ if .Values.server.ssl.enabled }}
      volumes:
        - name: tomcat-ssl
          secret:
            defaultMode: 420
            secretName: tomcat-ssl
        - name: java17-certs
          secret:
            defaultMode: 420
            secretName: java17-certs
      {{ end }}
      {{ if .Values.kubernetes.useSecrets }}
      imagePullSecrets:
        - name: {{ .Values.kubernetes.imagePullSecrets }}
      {{ end }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: transaction-processing-service-db-config
data:
  config.json:
    '{
      "spring.profiles.active": "{{.Values.spring.profiles.active}}",
      "spring.cloud.config.enabled": "{{.Values.spring.cloud.config.enabled}}",
      "spring.cloud.config.uri": "{{.Values.spring.cloud.config.uri}}",
      "spring.cloud.config.label": "{{.Values.spring.cloud.config.label}}",
      "spring.liquibase.enabled" : "{{.Values.spring.liquibase.enabled}}"
     }'
